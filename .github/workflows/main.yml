name: CI

on:
  push:
    branches:
      - main

env:
  REGISTRY: "mrdjeb"
  IMAGE_NAME: "vk"
  CONTAINER_NAME: "UPLOADer"


jobs:   
  deploy:
    runs-on: ubuntu-latest


    steps:
      - name: Set params
        id: vars
        run: |
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | head -c 8)" >> $GITHUB_ENV
          echo ::set-output name=ngrok_host::$(curl -H "Authorization: Bearer ${{ secrets.NGROK_TOKEN }}" -H "Ngrok-Version: 2" \
          https://api.ngrok.com/tunnels | jq '.tunnels[] | select(.proto == "tcp") | .public_url' | sed 's/"//g' | cut -d: -f1,2)
          echo ::set-output name=ngrok_port::$(curl -H "Authorization: Bearer ${{ secrets.NGROK_TOKEN }}" -H "Ngrok-Version: 2" \
          https://api.ngrok.com/tunnels | jq '.tunnels[] | select(.proto == "tcp") | .public_url' | sed 's/"//g' | cut -d: -f3)

      - name: Deploy to DockerHub via SSH action
        uses: appleboy/ssh-action@master
        with:
          host: 0.tcp.eu.ngrok.io
          port: ${{ steps.vars.outputs.ngrok_port }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: REGISTRY, IMAGE_NAME, CONTAINER_NAME, GITHUB_SHA_SHORT, 
          script: |
            # Set env variables
            export TOKEN=${{ secrets.TOKEN }}
            export MY_ID=${{ secrets.MY_ID }}

            # Log in to DockerHub
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

            # Stop running containers & Remove old containers
            docker ps -q --filter "name=$CONTAINER_NAME" | grep -q . && \
            docker stop $CONTAINER_NAME && \
            docker rm -f $CONTAINER_NAME

            # Pull image DockerHub
            docker pull $REGISTRY/$IMAGE_NAME:$GITHUB_SHA_SHORT

            # Run a new container from a new image
            docker run -e TOKEN -e MY_ID -d -v $CONTAINER_NAME-db:/docker-vk/sqlite \
            --restart always --publish 80:80 --name $CONTAINER_NAME \
            $REGISTRY/$IMAGE_NAME:$GITHUB_SHA_SHORT
